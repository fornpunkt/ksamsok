

buildscript {
    repositories {
        maven { url 'https://artifactory.raa.se/artifactory/raa-gradle-prod' }
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:6.2.0'
    }
}

plugins {
    id "war"
    id 'com.github.ben-manes.versions' version "0.39.0"
}

// Set up environment start
loadConfiguration()
def loadConfiguration() {
    def environment = project.hasProperty('env') ? project.env : 'default'
    project.ext.set 'environment', environment
}
apply from: 'environment.gradle'
// Set up environment end


apply plugin: 'idea'
apply plugin: 'eclipse'
//and standard one
apply plugin: 'java'
apply plugin: 'org.owasp.dependencycheck'

repositories {

    maven { url 'https://artifactory.raa.se/artifactory/raa-gradle-prod' }

    // för rome-mediarss, av någon anledning fungerar det inte utan den här, trots att vi har jcenter deklarerat i artifactory
    jcenter()
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    implementation group: 'org.apache.solr', name: 'solr-solrj', version: '8.8.2'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.18.1'

    implementation group: 'org.springframework', name: 'spring-beans', version: '5.3.7'
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.7'
    implementation group: 'org.springframework', name: 'spring-web', version: '5.3.7'
    implementation group: 'org.apache.jena', name: 'jena-core', version: '4.1.0'
    implementation group: 'org.apache.jena', name: 'jena-arq', version: '4.1.0'
    implementation group: 'org.geonames', name: 'georss-rome', version: '0.9.8'
    implementation group: 'rome', name: 'rome-mediarss', version: '0.2.2'
    implementation group: 'rome', name: 'rome', version: '1.0'
    implementation group: 'org.z3950.zing', name: 'cql-java', version: '1.10'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'



    implementation group: 'org.geotools', name: 'gt-referencing', version: '25.1'
    implementation group: 'org.geotools', name: 'gt-main', version: '25.1'
    implementation group: 'org.geotools.xsd', name: 'gt-xsd-core', version: '25.1'
    implementation group: 'org.geotools.xsd', name: 'gt-xsd-gml2', version: '25.1'
    implementation group: 'org.geotools', name: 'gt-epsg-wkt', version: '25.1'
    implementation group: 'org.geotools', name: 'gt-opengis', version: '25.1'


    // geotools needs this to build
    implementation group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'

    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.8.0'

    // xml-apis-xerces is transitive dependency that we don't need - everything is provided in xml-apis
    // and we can't use only xml-apis-xerces for some reason
    providedRuntime group: 'xml-apis', name: 'xml-apis-xerces', version: '2.7.1'

    implementation group: 'joda-time', name: 'joda-time', version: '2.10.10'
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'xalan', name: 'xalan', version: '2.7.2'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.dspace', name: 'oclc-harvester2', version: '0.1.12'


    implementation group: 'xml-apis', name: 'xml-apis', version: '1.4.01'

    //implementation group: 'jstl', name: 'jstl', version: '1.2'

    // old jars use old log4j, for example oclc-harvester2 0.1.12
    runtimeOnly group: 'log4j', name: 'log4j', version: '1.2.17'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.20'

    runtimeOnly group: 'javax.media.jai', name: 'com.springsource.javax.media.jai.core', version: '1.1.3'
    runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'



    testImplementation 'junit:junit:4.+'
    testImplementation group: 'org.springframework', name: 'spring-test', version: '5.3.7'
    testImplementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.7'

    // can't use higher version than 9.4.34 while using solr-solrj version: '8.8.2'
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.34.v20201102'


}



// Bygg med -Penv=buildserver för att bygga en warfil från en byggserver, 
// -Penv=local för att bygga en warfil med lokala inställningar
// Utan -Penv byggs en warfil med inställningar från src/main/environment/default
war {
    dependsOn setUpEnvironmentConfiguration
    archiveFileName = 'ksamsok.war'
    metaInf {
        from "src/main/environment/common/META-INF"
        def myProps = new Properties()
        file("src/main/environment/${environment}/environment.properties").withInputStream {
            myProps.load(it)
        }
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: myProps)
    }
    webInf {
        from "src/main/environment/common/WEB-INF"
        def myProps = new Properties()
        file("src/main/environment/${environment}/environment.properties").withInputStream {
            myProps.load(it)
        }
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: myProps)
    }
    manifest.attributes('Multi-Release': 'true')
}
